{"version":3,"sources":["components/MessageRow/MessageRow.module.scss","components/Chat/Chat.module.scss","App.module.scss","components/Input/Input.module.scss","types/MessageTypeEnum.ts","components/History/History.tsx","components/MessageRow/MessageRow.tsx","store/actions.ts","components/Input/Input.tsx","api/SocketClient.ts","store/selectors.ts","components/Chat/Chat.tsx","App.tsx","helpers.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","MessageTypeEnum","History","props","style","display","flexDirection","alignItems","gap","padding","flexGrow","overflow","children","MessageRow","direction","className","styles","messageRow","alignSelf","INCOMING","borderRadius","ADD_INCOMING","ADD_OUTCOMING","Input","useState","message","setMessage","dispatch","useDispatch","form","onSubmit","e","preventDefault","stopPropagation","type","payload","input","placeholder","autoFocus","value","onChange","target","button","src","alt","sendImg","SocketClient","require","process","REACT_APP_ENDPOINT_BASE_URL","REACT_APP_ENDPOINT_URL_TOKEN","connectToSocketClient","a","client","forceWebsockets","connect","selectMessages","state","messages","Chat","socketClient","setSocketClient","messageRef","useRef","useSelector","useEffect","then","on","output","text","lastMessage","length","OUTCOMING","sendMessage","title","current","scrollIntoView","chat","map","id","ref","App","app","nextMessageId","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4af8dd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageRow\":\"MessageRow_messageRow__3oM2C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__h9t69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2Z2j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__2mpaX\",\"input\":\"Input_input__28bBu\",\"button\":\"Input_button__3PMld\",\"sendImg\":\"Input_sendImg__2sGB7\"};","export enum MessageTypeEnum {\r\n    INCOMING = 'INCOMING',\r\n    OUTCOMING = 'OUTCOMING',\r\n}\r\n","import React, { FC } from \"react\";\r\n\r\nexport const History: FC = (props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"flex-start\",\r\n                gap: 10,\r\n                padding: 10,\r\n                flexGrow: 1,\r\n                overflow: \"auto\"\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n","import React, {FC} from \"react\";\r\nimport {MessageTypeEnum} from \"../../types/MessageTypeEnum\";\r\nimport styles from './MessageRow.module.scss';\r\n\r\ninterface MessageProps {\r\n    direction: MessageTypeEnum;\r\n}\r\n\r\nexport const MessageRow: FC<MessageProps> = (props) => {\r\n    const { direction } = props;\r\n\r\n    return (\r\n        <div\r\n            className={styles.messageRow}\r\n            style={{\r\n                alignSelf: direction === MessageTypeEnum.INCOMING ? \"flex-start\" : \"flex-end\",\r\n                borderRadius: direction === MessageTypeEnum.INCOMING ? \"3px 15px 15px 15px\" : \"15px 3px 15px 15px\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n","export const ADD_INCOMING = 'ADD_INCOMING';\r\nexport const ADD_OUTCOMING = 'ADD_OUTCOMING';\r\n\r\nexport const addIncomingAction = (payload: string) => ({\r\n    type: ADD_INCOMING,\r\n    payload,\r\n});\r\n\r\nexport const addOutcomingAction = (payload: string) => ({\r\n    type: ADD_OUTCOMING,\r\n    payload,\r\n});\r\n","import React, { FC, FormEventHandler, useState } from \"react\";\r\nimport {addOutcomingAction} from \"../../store/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from './Input.module.scss';\r\n\r\nexport const Input: FC = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit: FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (message !== \"\") {\r\n            dispatch(addOutcomingAction(message));\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={styles.form}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                className={styles.input}\r\n                placeholder=\"type here\"\r\n                autoFocus\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <button className={styles.button} type=\"submit\">\r\n                <img\r\n                    src=\"./sendLogo.png\"\r\n                    alt=\"send button\"\r\n                    className={styles.sendImg}\r\n                />\r\n            </button>\r\n        </form>\r\n    );\r\n};","const { SocketClient } = require(\"@cognigy/socket-client\");\r\nconst { REACT_APP_ENDPOINT_BASE_URL, REACT_APP_ENDPOINT_URL_TOKEN } = process.env;\r\n\r\nexport const connectToSocketClient = async () => {\r\n    const client = new SocketClient(REACT_APP_ENDPOINT_BASE_URL, REACT_APP_ENDPOINT_URL_TOKEN, {\r\n        forceWebsockets: true,\r\n    });\r\n    await client.connect();\r\n\r\n    return client;\r\n};\r\n\r\nexport type SocketClientType = typeof SocketClient;","import {State} from \"../types/State\";\r\n\r\nexport const selectMessages = (state: State) => (state.messages);\r\n","import {FC, useEffect, useRef, useState} from \"react\";\r\nimport {History} from \"../History\";\r\nimport {MessageRow} from \"../MessageRow\";\r\nimport {Input} from \"../Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {connectToSocketClient, SocketClientType} from \"../../api/SocketClient\";\r\nimport {addIncomingAction} from \"../../store/actions\";\r\nimport {MessageTypeEnum} from \"../../types/MessageTypeEnum\";\r\nimport {selectMessages} from \"../../store/selectors\";\r\nimport {SocketOutput} from \"../../types/SocketOutput\";\r\nimport styles from './Chat.module.scss';\r\n\r\nconst Chat: FC = () => {\r\n    const [socketClient, setSocketClient] = useState<SocketClientType>(null);\r\n    const dispatch = useDispatch();\r\n    const messageRef = useRef<HTMLDivElement>(null);\r\n    const messages = useSelector(selectMessages);\r\n\r\n    useEffect(() => {\r\n        connectToSocketClient()\r\n            .then((client) => {\r\n                setSocketClient(client);\r\n                client.on(\"output\", (output: SocketOutput) => {\r\n                    dispatch(addIncomingAction(output.text));\r\n                });\r\n            });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       const lastMessage = messages[messages.length - 1];\r\n       if (lastMessage && lastMessage.type === MessageTypeEnum.OUTCOMING) {\r\n           socketClient.sendMessage(lastMessage.title)\r\n       }\r\n\r\n        if (messageRef.current) {\r\n            messageRef.current.scrollIntoView();\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div className={styles.chat}>\r\n            <History>\r\n                {messages?.map((message) => (\r\n                    <MessageRow direction={message.type} key={message.id}>\r\n                        {message.title}\r\n                    </MessageRow>\r\n                ))}\r\n                <div ref={messageRef} />\r\n            </History>\r\n            <Input />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import Chat from \"./components/Chat/Chat\";\nimport styles from './App.module.scss';\n\nexport default function App() {\n  return (\n      <div className={styles.app}>\n        <Chat />\n      </div>\n  );\n}\n","export const nextMessageId = (id: number): number => {\r\n    return id + 1;\r\n}\r\n","import {ADD_INCOMING, ADD_OUTCOMING} from \"../actions\";\r\nimport {nextMessageId} from \"../../helpers\";\r\nimport {Message} from \"../../types/Message\";\r\nimport {Action} from \"../../types/Action\";\r\nimport {MessageTypeEnum} from \"../../types/MessageTypeEnum\";\r\n\r\ninterface State {\r\n    messages: Message[],\r\n}\r\n\r\nexport const initialState = {\r\n    messages: [],\r\n}\r\n\r\nexport const appReducer = (\r\n    state: State = initialState,\r\n    action: Action\r\n) => {\r\n    switch (action.type) {\r\n        case ADD_INCOMING:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages, {\r\n                        id: nextMessageId(state.messages[state.messages.length - 1]?.id || 0),\r\n                        title: action.payload,\r\n                        type: MessageTypeEnum.INCOMING,\r\n                }],\r\n            };\r\n        case ADD_OUTCOMING:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages, {\r\n                    id: nextMessageId(state.messages[state.messages.length - 1]?.id || 0),\r\n                    title: action.payload,\r\n                    type: MessageTypeEnum.OUTCOMING,\r\n                },\r\n            ]};\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n","import {createStore} from 'redux'\r\nimport {appReducer, initialState} from \"./reducers\";\r\n\r\nexport const store = createStore(\r\n    appReducer,\r\n    initialState,\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}